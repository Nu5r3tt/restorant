@page "/admin/orders"
@using Microsoft.AspNetCore.Authorization
@using RestaurantOrdering.Models
@using RestaurantOrdering.Repositories
@inject IOrderRepository OrderRepository
@inject ITableRepository TableRepository
@inject NavigationManager Navigation
@attribute [Authorize]
@rendermode InteractiveServer

<PageTitle>Sipariş Yönetimi - Admin</PageTitle>

<div class="min-h-screen bg-gradient-to-br from-natural-light to-cream-50">
    <!-- Header Section -->
    <div class="bg-white border-b border-natural-muted shadow-sm">
        <div class="natural-container py-6">
            <div class="flex flex-col md:flex-row md:justify-between md:items-center space-y-4 md:space-y-0">
                <div class="flex items-center space-x-4">
                    <div class="w-12 h-12 bg-natural-accent rounded-xl flex items-center justify-center">
                        <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"></path>
                        </svg>
                    </div>
                    <div>
                        <h1 class="text-3xl font-bold text-gray-900">Sipariş Yönetimi</h1>
                        <p class="text-gray-600 mt-1">Masa durumları ve bekleyen siparişleri yönetin</p>
                    </div>
                </div>
                
                <div class="flex items-center space-x-3">
                    <button @onclick="RefreshData" 
                            class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-natural-accent focus:ring-offset-2 transition-colors duration-200">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                        </svg>
                        Yenile
                    </button>
                    
                    @if (pendingOrderCounts?.Values.Sum() > 0)
                    {
                        <div class="inline-flex items-center px-3 py-2 rounded-lg bg-red-50 text-red-700 text-sm font-medium">
                            <div class="w-2 h-2 bg-red-500 rounded-full mr-2 animate-pulse"></div>
                            @pendingOrderCounts.Values.Sum() Aktif Sipariş
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="natural-container py-8">
        @if (tables == null || pendingOrderCounts == null)
        {
            <div class="flex flex-col items-center justify-center py-20">
                <div class="animate-spin rounded-full h-16 w-16 border-b-2 border-natural-accent"></div>
                <p class="mt-4 text-lg text-gray-600">Masa verileri yükleniyor...</p>
                <p class="text-sm text-gray-500 mt-1">Lütfen bekleyiniz</p>
            </div>
        }
        else if (!tables.Any())
        {
            <div class="text-center py-20">
                <div class="w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6">
                    <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                    </svg>
                </div>
                <h3 class="text-xl font-semibold text-gray-800 mb-2">Henüz masa bulunmamaktadır</h3>
                <p class="text-gray-600">Masa eklemek için masa yönetimi bölümünü ziyaret edin</p>
            </div>
        }
        else
        {
            <!-- Statistics Cards -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
                    <div class="flex items-center">
                        <div class="w-12 h-12 bg-blue-50 rounded-lg flex items-center justify-center">
                            <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-600">Toplam Masa</p>
                            <p class="text-2xl font-bold text-gray-900">@tables.Count()</p>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
                    <div class="flex items-center">
                        <div class="w-12 h-12 bg-orange-50 rounded-lg flex items-center justify-center">
                            <svg class="w-6 h-6 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-600">Bekleyen Masa</p>
                            <p class="text-2xl font-bold text-gray-900">@pendingOrderCounts.Count(kv => kv.Value > 0)</p>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
                    <div class="flex items-center">
                        <div class="w-12 h-12 bg-red-50 rounded-lg flex items-center justify-center">
                            <svg class="w-6 h-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-600">Aktif Sipariş</p>
                            <p class="text-2xl font-bold text-gray-900">@pendingOrderCounts.Values.Sum()</p>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
                    <div class="flex items-center">
                        <div class="w-12 h-12 bg-green-50 rounded-lg flex items-center justify-center">
                            <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-600">Boş Masa</p>
                            <p class="text-2xl font-bold text-gray-900">@(tables.Count() - pendingOrderCounts.Count(kv => kv.Value > 0))</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Tables Grid -->
            <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
                <div class="flex items-center justify-between mb-6">
                    <h2 class="text-lg font-semibold text-gray-900">Masa Durumları</h2>
                    <div class="flex items-center space-x-4 text-sm">
                        <div class="flex items-center">
                            <div class="w-3 h-3 bg-green-400 rounded-full mr-2"></div>
                            <span class="text-gray-600">Boş</span>
                        </div>
                        <div class="flex items-center">
                            <div class="w-3 h-3 bg-red-400 rounded-full mr-2"></div>
                            <span class="text-gray-600">Bekleyen Sipariş</span>
                        </div>
                    </div>
                </div>
                
                <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-4">
                    @foreach (var table in tables.OrderBy(t => t.TableNumber))
                    {
                        var pendingCount = pendingOrderCounts.GetValueOrDefault(table.Id, 0);
                        var hasOrders = pendingCount > 0;
                        
                        <div class="relative group cursor-pointer" @onclick="() => NavigateToTableOrders(table.Id)">
                            <div class="@(hasOrders ? "bg-gradient-to-br from-red-50 to-red-100 border-red-200 hover:from-red-100 hover:to-red-150" : "bg-gradient-to-br from-green-50 to-green-100 border-green-200 hover:from-green-100 hover:to-green-150") 
                                        border-2 rounded-xl p-6 transition-all duration-300 transform group-hover:scale-105 group-hover:shadow-lg min-h-[140px] flex flex-col justify-center items-center">
                                
                                <!-- Table Icon -->
                                <div class="@(hasOrders ? "text-red-600" : "text-green-600") text-3xl mb-3">
                                    @if (hasOrders)
                                    {
                                        <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 24 24">
                                            <path d="M21 2H3a1 1 0 00-1 1v18a1 1 0 001 1h18a1 1 0 001-1V3a1 1 0 00-1-1zM11 19H4v-6h7v6zm0-8H4V5h7v6zm9 8h-7v-6h7v6zm0-8h-7V5h7v6z"/>
                                        </svg>
                                    }
                                    else
                                    {
                                        <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 24 24">
                                            <path d="M21 2H3a1 1 0 00-1 1v18a1 1 0 001 1h18a1 1 0 001-1V3a1 1 0 00-1-1zM11 19H4v-6h7v6zm0-8H4V5h7v6zm9 8h-7v-6h7v6zm0-8h-7V5h7v6z"/>
                                        </svg>
                                    }
                                </div>
                                
                                <!-- Table Number -->
                                <h3 class="@(hasOrders ? "text-red-900" : "text-green-900") text-lg font-bold mb-2">
                                    Masa @table.TableNumber
                                </h3>
                                
                                <!-- Status -->
                                @if (hasOrders)
                                {
                                    <div class="text-red-700 font-semibold text-sm mb-1">
                                        @pendingCount Bekleyen
                                    </div>
                                    <div class="text-red-600 text-xs opacity-75">
                                        Tıklayın →
                                    </div>
                                }
                                else
                                {
                                    <div class="text-green-700 font-medium text-sm">
                                        Müsait
                                    </div>
                                }
                            </div>
                            
                            @if (hasOrders)
                            {
                                <!-- Notification Badge -->
                                <div class="absolute -top-2 -right-2 bg-red-500 text-white rounded-full w-8 h-8 flex items-center justify-center text-sm font-bold shadow-lg animate-pulse border-2 border-white">
                                    @pendingCount
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        }
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="fixed bottom-4 right-4 bg-red-50 border-l-4 border-red-400 text-red-700 px-6 py-4 rounded-lg shadow-lg max-w-md">
            <div class="flex items-center">
                <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <div>
                    <p class="font-medium">Hata!</p>
                    <p class="text-sm">@errorMessage</p>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private IEnumerable<Table>? tables;
    private Dictionary<int, int>? pendingOrderCounts;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            tables = await TableRepository.GetActiveTablesAsync();
            pendingOrderCounts = await OrderRepository.GetPendingOrderCountsByTableAsync();
        }
        catch (Exception ex)
        {
            errorMessage = "Veriler yüklenirken hata oluştu.";
            Console.WriteLine($"Error loading data: {ex.Message}");
        }
    }

    private async Task RefreshData()
    {
        await LoadData();
        StateHasChanged();
    }

    private void NavigateToTableOrders(int tableId)
    {
        Navigation.NavigateTo($"/admin/table-orders/{tableId}");
    }
}
